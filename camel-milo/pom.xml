<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>de.dentrassi.camel.milo</groupId>
        <artifactId>parent</artifactId>
        <version>0.1.0-SNAPSHOT</version>
        <relativePath>..</relativePath>
    </parent>

    <artifactId>camel-milo</artifactId>
    <packaging>bundle</packaging>

    <name>Camel :: Eclipse Milo :: Component</name>
    <description>This is an Apache Camel adapter for OPC UA based on the implementation of Eclipse Miloâ„¢</description>

    <properties>
        <!-- we do require java 8 -->
        <jdk.version>1.8</jdk.version>

        <camel.osgi.export.pkg>!*.internal.*,org.apache.camel.component.milo.*</camel.osgi.export.pkg>
        <camel.osgi.export.service>
            org.apache.camel.spi.ComponentResolver;component=milo-client,
            org.apache.camel.spi.ComponentResolver;component=milo-server
        </camel.osgi.export.service>
    </properties>

    <repositories>

        <repository>
            <id>central</id>
            <url>http://repo1.maven.org/maven2</url>
        </repository>

        <!-- enable snapshots for milo -->
        <repository>
            <id>oss-sonatype</id>
            <name>oss-sonatype</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.milo</groupId>
            <artifactId>sdk-server</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.milo</groupId>
            <artifactId>sdk-client</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <!-- Testing dependencies -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-paho</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Export-Service>
                        org.apache.camel.spi.ComponentResolver;component=milo-server,
                        org.apache.camel.spi.ComponentResolver;component=milo-client
                        </Export-Service>
                    </instructions>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- require due to issue eclipse/milo#23 -->
                    <reuseForks>false</reuseForks>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-package-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>prepare-components</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>validate</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>validate-components</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>readme</id>
                        <phase>package</phase>
                        <goals>
                            <goal>update-readme</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>